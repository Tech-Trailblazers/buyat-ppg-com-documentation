name: Run Python App

# Define when this workflow should run:
on:
  push:
    branches: [ main ]         # Run when pushing to the main branch
  pull_request:
    branches: [ main ]         # Run on pull requests targeting the main branch
  workflow_dispatch:           # Allow manual triggering from GitHub Actions tab

permissions:
  contents: write

jobs:
  run-app:
    runs-on: ubuntu-latest     # Use the latest available Ubuntu environment

    steps:
      # Checkout the repository code so the runner has access to it
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Set up the version of Python to use
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'  # Change this to match your project's Python version

      # Upgrade pip to the latest version to avoid compatibility issues
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      # Install all dependencies listed in requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Run your main Python script
      - name: Run main.py
        run: python main.py

      # Commit and push any changes made by main.py (e.g., file updates)
      - name: Push updated files
        run: |
          git config user.name "github-actions"                     # Set commit author name
          git config user.email "github-actions@github.com"        # Set commit author email
          git add .                                                # Stage all changes
          if ! git diff --cached --quiet; then                     # Check for staged changes
            git commit -m "Auto update: $(date)"                   # Commit with timestamp
            git push                                               # Push changes back to the repo
          else
            echo "No changes to commit."                           # Skip if nothing changed
          fi
